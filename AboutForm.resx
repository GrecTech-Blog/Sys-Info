<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>